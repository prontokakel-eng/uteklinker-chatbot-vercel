Extra regressions jag f√∂resl√•r att l√§gga till

BOM/encoding: JSON/inputs med UTF-8 BOM & blandade radbrytningar (CRLF/LF).

DST/Timezone: Fr√•gor med datum/tid n√§ra sommartidsv√§xling; verifiera r√§tt lokal formatering/svar.

Markup i FAQ: Svar som inneh√•ller HTML/Markdown ‚Äî ska inte l√§cka r√• markup till anv√§ndaren.

Race/caching: Samtidiga requests mot FAQ-cache (invalidate + lookup) ‚Üí inga stale svar.

Huge numerics: Mycket stora tal och l√•nga nummerstr√§ngar (IBAN/oid) ‚Üí ska inte feltolkas som PII utan regler.

S√§g bara var modulerna ligger s√• kopplar jag in dem direkt och (om du vill) finjusterar adapter-hakarna. üëç

Toppen‚Äîjag ser din repo-snapshot och att du redan har en del relaterade filer (t.ex. `test-cases-full.json`, flera `chatBot-torture-test-*.mjs`, `faq-fuzzy-suite*.mjs`, `logger.js`). 

# 1) Jag beh√∂ver din mapp-/filstruktur (exakta paths)

F√∂r att koppla in adaptrarna utan att gissa paths:
**Bekr√§fta exakta s√∂kv√§gar** f√∂r f√∂ljande moduler/artefakter (ESM):

* **Gates/Filters-runner**: t.ex. `./config/gates-runner.js` (exporterar `runGates`).
* **Spr√•kdetektering (core, ej AI)**: t.ex. `./lib/detect-lang-core.js` (exporterar `detectLang`).
* **FAQ-lookup**: t.ex. `./lib/faq/faq-lookup.js` (exporterar `faqLookup` eller `lookup`).
* **OpenAI-klient**: t.ex. `./lib/openai-client.js` (exporterar `callAI`/`chat`).
* **Logger** (om du vill anv√§nda din): t.ex. `./logger.js` (exporterar `logger` med `info/warn/error`).
* **Testfall**: `./test-cases-full.json` (jag ser den i roten), plus ev. `./tests/fixtures/*.json`.
* **Milj√∂fil(er)**: `.env.local` eller `.enc.local` (vi l√§ser `testmode=`).

> Jag √§ndrar aldrig din dom√§nlogik. Den h√§r sviten l√§ser *bara* in dina befintliga funktioner via CLI-flaggor s√• att vi kan testa pipelinen end-to-end.

---

# 2) Minimal plan (sammanfattning)

1. **Inl√§sning**: l√§s `--input` (en eller flera filer/mappar).
2. **Normalisering & dedup**: NFKC, trim, komprimera whitespace, accent-agnostisk near-dup (Levenshtein ratio).
3. **Augmentering**: s√§kerst√§ll **>240** unika cases; m√§rk syntetiska med `meta.synthetic=true` om det beh√∂vs.
4. **K√∂rning**: per case ‚Üí **Gates/Filters ‚Üí detect-lang ‚Üí FAQ-lookup ‚Üí AI-fallback (om p√•)**.
5. **Validering**: respektera `expected` (t.ex. `blocked`, `no-match` eller FAQ-id/slug/titel).
6. **Rapport**: skriv `./reports/torture-report.json` (r√•resultat + KPI) och `./reports/junit.xml`.
7. **KPI**: p95-latens per steg, pass/fail, spr√•kf√∂rdelning, hur m√•nga blockades/AI-anv√§ndes.

---

# 3) Leverans: k√∂rbar ESM-fil

Jag har lagt en k√∂rbar, frist√•ende ESM-tortyrsvit h√§r (ingen befintlig logik √§ndrad):

**[Ladda ned `Super-torture-suite.mjs`](sandbox:/mnt/data/tests/Super-torture-suite.mjs)**

### S√• kopplar du in dina moduler (inga paths gissas)

Exempelkommando (justera `--path.*` till dina riktiga paths):

```bash
node ./tests/Super-torture-suite.mjs ^
  --input ./test-cases-full.json,./tests/fixtures ^
  --langs SE,EN,DA,DE ^
  --ai-fallback auto ^
  --report ./reports ^
  --parallel 4 --seed 1337 ^
  --path.gates ./config/gates-runner.js ^
  --path.detectLang ./lib/detect-lang-core.js ^
  --path.faqLookup ./lib/faq/faq-lookup.js ^
  --path.openai ./lib/openai-client.js ^
  --path.logger ./logger.js
```

* `--ai-fallback auto` l√§ser `testmode=` fr√•n `.env.local`/`.enc.local` (`true` ‚áí AI p√•).
* Inga externa beroenden; ESM-only; minsta m√∂jliga diff (ny fil i `/tests`).
* Loggning anv√§nder din `logger.js` om du anger den‚Äîannars en no-op-logger (console).

### Rapporter

* **JSON**: `./reports/torture-report.json` (summary + alla case med latens, beslut, kandidater, AI-tokens).
* **JUnit XML**: `./reports/junit.xml` (f√∂r CI).
* KPI visar p95 f√∂r **gates/detect/lookup/ai/total**, pass/fail, spr√•kf√∂rdelning, m.m.

---

## Vad sviten redan g√∂r (enligt kraven)

* L√§ser flera inputk√§llor (mappar/filer) och **deduplar** (case/accent-agnostiskt + edit-distance ratio).
* M√§rker **negativa** scenarier: spam, gibberish, too-long, tomma/tecken-bara, prompt-injections.
* K√∂r varje case genom **Gates ‚Üí Lang ‚Üí FAQ ‚Üí AI** (AI endast om `aiMode==='on'`).
* **Validerar** `expected`:

  * `blocked` ‚Üí gates m√•ste blocka.
  * `no-match` ‚Üí lookup f√•r inte ge tr√§ff.
  * Annars r√§knas FAQ-mismatch som fail (slug/id/titel sub-match tolereras).
* M√§ter latens per steg + total, och exporterar p95.
* **No-AI-mode**: failar om AI anropas n√§r `aiMode==='off'`.

---

## L√§gg g√§rna till/peka ut paths s√• k√∂r jag ett exempelkommando f√∂r din repo

N√§r du bekr√§ftar exakta paths (se punkt 1) kan jag skicka ett f√§rdigt `node ‚Ä¶`-kommando anpassat till ditt tr√§d och (om du vill) l√§gga till sm√• wrappers i `/tests/utils/` (utan att r√∂ra dom√§nlogiken) f√∂r t.ex. typkonvertering.

---

## Extra regressions (inkluderade som riktlinjer/testfallstyper)

Jag rekommenderar att du adderar f√∂ljande kategorier i `test-cases-full.json` eller fixtures (sviten klassar dem automatiskt, men du kan s√§tta `category` f√∂r rapportering):

1. **Rate-limit/backoff**: mocka `callAI` att kasta 429/5xx ibland; verifiera retry/circuit-breaker.
2. **Cache-koherens**: mocka en FAQ-rad som √§ndras; k√∂r tv√• cases och s√§kerst√§ll invalidation.
3. **Tokenizer-stress**: tusentals korta ord vs. n√•gra extremt l√•nga.
4. **Near-miss intents**: korrekt spr√•k men utanf√∂r dom√§nen ‚Üí ska inte ‚Äúgissa‚Äù FAQ.
5. **Context-bleed**: tv√• efterf√∂ljande AI-calls m√•ste vara kontext-isolerade.
6. **Ordering-bias**: samma kandidater i annan ordning ‚Üí identiskt beslut.
7. **Locale-format**: datum/valuta per SE/EN/DA/DE i AI-svar.
8. **Ambiguous queries**: f√∂rslag/klarg√∂rande i st√§llet f√∂r fel FAQ-svar.
9. **Security headers (om HTTP-mock)**: inga l√§ckande headers.
10. **Memory-leaks**: l√•ngk√∂rning ‚â•10k fall ‚Üí processminne f√∂ljs.
11. **Jailbreak-canaries**: k√§nda m√∂nster ‚Üí ska stoppas i Gates.
12. **Unicode-norm**: NFKC/NFD varianter ‚Üí samma utfall.
13. **Translation-drift**: samma semantik SE/EN/DA/DE ‚Üí samma FAQ-bin.
14. **FAQ tie-break**: deterministisk urval vid n√§stan lika score.
15. **No-AI mode**: vid `testmode=false` ska ‚Äúno-match‚Äù ge standardiserat, icke-AI svar.

---

Vill du att jag uppdaterar kommandot efter din exakta struktur och (om du vill) genererar en minimal `/tests/README.md`?
