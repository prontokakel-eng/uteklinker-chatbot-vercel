export declare const ROOT_WORKSPACE_NAME = ".";
export declare const IMPORT_STAR = "*";
export declare const ANONYMOUS = "__anonymous";
export declare const KNIP_CONFIG_LOCATIONS: string[];
export declare const DEFAULT_EXTENSIONS: string[];
export declare const GLOBAL_IGNORE_PATTERNS: string[];
export declare const PUBLIC_TAG = "@public";
export declare const INTERNAL_TAG = "@internal";
export declare const BETA_TAG = "@beta";
export declare const ALIAS_TAG = "@alias";
export declare const DT_SCOPE = "@types";
export declare const PROTOCOL_VIRTUAL = "virtual:";
export declare const IGNORED_GLOBAL_BINARIES: Set<string>;
export declare const IGNORED_DEPENDENCIES: Set<string>;
export declare const IGNORED_RUNTIME_DEPENDENCIES: Set<string>;
export declare const FOREIGN_FILE_EXTENSIONS: Set<string>;
export declare const IGNORE_DEFINITELY_TYPED: Set<string>;
export declare const ISSUE_TYPES: readonly ["files", "dependencies", "devDependencies", "optionalPeerDependencies", "unlisted", "binaries", "unresolved", "exports", "nsExports", "types", "nsTypes", "enumMembers", "classMembers", "duplicates"];
export declare const ISSUE_TYPE_TITLE: {
    readonly files: "Unused files";
    readonly _files: "Unused files";
    readonly dependencies: "Unused dependencies";
    readonly devDependencies: "Unused devDependencies";
    readonly optionalPeerDependencies: "Referenced optional peerDependencies";
    readonly unlisted: "Unlisted dependencies";
    readonly binaries: "Unlisted binaries";
    readonly unresolved: "Unresolved imports";
    readonly exports: "Unused exports";
    readonly nsExports: "Exports in used namespace";
    readonly types: "Unused exported types";
    readonly nsTypes: "Exported types in used namespace";
    readonly enumMembers: "Unused exported enum members";
    readonly classMembers: "Unused exported class members";
    readonly duplicates: "Duplicate exports";
};
export declare const SYMBOL_TYPE: {
    readonly CLASS: "class";
    readonly ENUM: "enum";
    readonly FUNCTION: "function";
    readonly INTERFACE: "interface";
    readonly MEMBER: "member";
    readonly TYPE: "type";
    readonly UNKNOWN: "unknown";
    readonly VARIABLE: "variable";
};
export declare const FIX_FLAGS: {
    readonly NONE: 0;
    readonly OBJECT_BINDING: number;
    readonly EMPTY_DECLARATION: number;
    readonly WITH_NEWLINE: number;
};
