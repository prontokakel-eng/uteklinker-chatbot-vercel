// tests/test-norm.js
import fetch from "node-fetch";

const API_URL = "http://localhost:3000/api/chat";

const testQuestions = [
  "Kan man l√§gga 2cm klinker p√• gr√§s?",
  "√Ñr tjocka klinkerplattor frostt√•liga?",
  "Vilken typ av utomhusplattor √§r b√§st f√∂r altan?",
  "√Ñr tr√§dg√•rdsklinker bra f√∂r g√•ngar i tr√§dg√•rden?",
  "Tv√•centimeters klinker funkar v√§l till utek√∂k?",
  "Passar klinkerd√§ck f√∂r utek√∂k?"
];

const modes = ["STRICT", "SOFT", "FUZZY"];

let normalizedCount = 0;
let aiCount = 0;
let faqCount = 0;

async function runTests() {
  for (const q of testQuestions) {
    console.log("\n===============================");
    console.log("üìù Fr√•ga:", q);

    for (const mode of modes) {
      const res = await fetch(API_URL, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ message: q, lang: "SE", mode }),
      });

      const data = await res.json();
      console.log(`\nüîé Mode: ${mode}`);

      if (data.normalizedMessage && data.normalizedMessage !== q) {
        console.log(`   üîÑ Normaliserat till: "${data.normalizedMessage}"`);
        normalizedCount++;
      } else {
        console.log("   ‚ÑπÔ∏è Ingen normalisering (beh√∂lls som den var).");
      }

      if (data.source?.startsWith?.("FAQ")) {
        faqCount++;
        if (data.score < 0.7) {
          console.log(`   ‚ö†Ô∏è FAQ-tr√§ff men l√•g score (${Number(data.score).toFixed(3)})`);
        } else {
          console.log(`   üìö FAQ-tr√§ff! Score: ${Number(data.score).toFixed(3)}`);
        }
      } else if (data.source === "AI") {
        console.log("   ü§ñ K√§lla: AI (fallback aktiverad)");
        aiCount++;
      } else {
        console.log(`   üìå K√§lla: ${data.source}`);
      }

      console.log(`   üí¨ Svar: ${String(data.reply||"").slice(0, 100)}...`);
    }
  }

  console.log("\n===== üìä Summering =====");
  console.log(`üîÑ Normalisering: ${normalizedCount} g√•nger`);
  console.log(`üìö FAQ anv√§ndes: ${faqCount} g√•nger`);
  console.log(`ü§ñ AI fallback: ${aiCount} g√•nger`);
}

runTests().catch((err) => console.error("‚ùå Test error:", err));
