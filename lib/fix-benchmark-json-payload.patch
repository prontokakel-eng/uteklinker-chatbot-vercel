diff --git a/lib/faq-sheets.js b/lib/faq-sheets.js
index bd281a2..6b13c2e 100644
--- a/lib/faq-sheets.js
+++ b/lib/faq-sheets.js
@@ -132,10 +132,27 @@ export async function writeBenchmarkResult(row, attempt = 1) {
   // üõ°Ô∏è Bypass eventuell readonly-klient: initiera WRITE-klient varje g√•ng vi ska skriva.
   const sheets = await ensureClient("write", "writeBenchmarkResult");

-  try {
-    await sheets.spreadsheets.values.append({
-      spreadsheetId: sheetId,
-      range: `${tab}!A:Z`,            // stor range f√∂r s√§kerhets skull
-      valueInputOption: "USER_ENTERED",
-      requestBody: { values: [row] },
-    });
-    log(`‚úÖ Wrote to ${tab}: ${JSON.stringify(row)}`);
+  // üß© Om "row" √§r ett objekt (fr√•n benchmark), konvertera till array
+  let values;
+  if (Array.isArray(row)) {
+    values = row;
+  } else if (typeof row === "object" && row !== null) {
+    // üîí Fast kolumnordning f√∂r benchmark-utdata
+    const order = [
+      "sheetName",
+      "lang",
+      "question",
+      "detectedLang",
+      "confidence",
+      "result",
+      "timestamp"
+    ];
+    values = order.map(k => row[k] ?? "");
+  } else {
+    values = [String(row)];
+  }
+
+  try {
+    await sheets.spreadsheets.values.append({
+      spreadsheetId: sheetId,
+      range: `${tab}!A:Z`,            // stor range f√∂r s√§kerhets skull
+      valueInputOption: "USER_ENTERED",
+      requestBody: { values: [values] },
+    });
+    log(`‚úÖ Wrote to ${tab}: ${JSON.stringify(row)}`);
