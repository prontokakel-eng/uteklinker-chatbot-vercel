// /lib/faq-dialog.js
// Dialoglogik f√∂r FAQ med interaktiv hantering av f√§rger och format
// Exporteras som ESM (eftersom package.json har "type": "module")

function splitLongAnswer(answer, chunkSize = 200) {
  const parts = [];
  let current = "";

  answer.split(" ").forEach(word => {
    if ((current + " " + word).length > chunkSize) {
      parts.push(current.trim());
      current = word;
    } else {
      current += " " + word;
    }
  });
  if (current) parts.push(current.trim());
  return parts;
}

export function handleFaqDialog(session, question, answer) {
  // Reset state om en ny fr√•ga st√§lls (dvs inte bara "ja/yes/y")
  const normalizedQ = question.toLowerCase();
  const isYes = normalizedQ === "ja" || normalizedQ === "yes" || normalizedQ === "y";

  if (!isYes) {
    // Ny fr√•ga => √•terst√§ll state
    session.pendingAnswerParts = [];
    session.answerStep = 0;
    session.fallbackShown = false;
  }

  // Initiera state om saknas
  if (!session.pendingAnswerParts) session.pendingAnswerParts = [];
  if (!session.answerStep) session.answerStep = 0;
  if (!session.fallbackShown) session.fallbackShown = false;

  // Om anv√§ndaren svarar ja/yes/y
  if (isYes) {
    if (session.pendingAnswerParts.length > 0) {
      // Visa n√§sta block
      session.answerStep++;
      const nextPart = session.pendingAnswerParts.shift();
      let reply = nextPart;

      if (session.answerStep >= 3 || session.pendingAnswerParts.length === 0) {
        reply += " ‚Ä¶ f√∂r fler se hela listan p√• v√•r webbplats.";
        session.pendingAnswerParts = [];
        session.answerStep = 3; // s√§kerst√§ll cutoff-l√§ge
      } else {
        reply += " ‚Ä¶ Vill du se fler?";
      }
      return reply;
    } else if (session.answerStep >= 3) {
      // Efter cutoff
      if (!session.fallbackShown) {
        session.fallbackShown = true;
        return "Jag har visat alla jag kan h√§r i chatten üòä F√∂r fler detaljer, kika g√§rna p√• v√•r webbplats.";
      } else {
        return ""; // tyst efter f√∂rsta fallback
      }
    }
  }

  // Om svaret √§r l√•ngt -> dela upp
  if (answer && answer.length > 200) {
    const parts = splitLongAnswer(answer, 200);
    const firstPart = parts.shift();
    session.pendingAnswerParts = parts;
    session.answerStep = 1;

    // Best√§m om det √§r f√§rger eller format f√∂r r√§tt f√∂ljdfr√•ga
    let followUp = "Vill du se fler?";
    if (normalizedQ.includes("f√§rg")) {
      followUp = "Vill du se fler f√§rger?";
    } else if (
      normalizedQ.includes("format") ||
      normalizedQ.includes("storlek")
    ) {
      followUp = "Vill du se fler format?";
    }

    if (session.answerStep >= 3 || session.pendingAnswerParts.length === 0) {
      session.answerStep = 3; // markera cutoff-l√§ge direkt
      return firstPart + " ‚Ä¶ f√∂r fler se hela listan p√• v√•r webbplats.";
    } else {
      return firstPart + " ‚Ä¶ " + followUp;
    }
  }

  // Standard: returnera svaret rakt av
  return answer;
}
